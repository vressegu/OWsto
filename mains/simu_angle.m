%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Simulate the deterministic and stochastic equation of the angle between
%%% tracer gradient and compressive strain direction
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Pameters

% Physical parameters
r = 0.0;
% r = 0.9;
%  alpha2 = 0;
alpha2 = 10^(0.0);

% Simulation parameters
T =  min ( [ 2/sqrt(abs(r^2-1)) abs(10/r) ] ) * 50;
dt = min (  [ min( [ 2/sqrt(abs(r^2-1)) abs(1/r) ] ) ...
             (2*pi)^2/alpha2                       ] ) /100;
% T = min ( [ 2/sqrt(abs(r^2-1)) 10/r ] ) *5;
% T = 3e2 * 1;
% dt = 1e-1 * 1;
% T = 1e1 * alpha2;
% dt = 1e-1 * alpha2;
theta_0 = 0.4;
rho_0 = 1;

% Pre-treatement
time = 0:dt:T;
N =length(time);
alpha = sqrt(alpha2);

% Sampling of noise
dBt = sqrt(dt) * randn(N,2);

%% Time integration
theta= nan(N,1);
ln_rho= nan(N,1);
theta(1)=theta_0;
ln_rho(1)=log(rho_0);
for k_t=1:(N-1)
% for t_local = time(2:end)
    theta(k_t+1) = theta(k_t) ...
        + ( r - cos( theta(k_t) ) ) * dt ...
        + alpha * dBt(k_t,1) ;
    ln_rho(k_t+1) = ln_rho(k_t) ...
        +  ( ( alpha2/12 - sin( theta(k_t) ) ) * dt ...
             + alpha/sqrt(12) * dBt(k_t,2) );
end
theta = mod(theta+pi,2*pi)-pi;

%% Plots
close
% figure(1)

X0= [0 0];
taille_police = 12;

width = 4;
height = 6;
figure2=figure(2);
set(figure2,'Units','inches', ...
    'Position',[X0(1) X0(2) width height], ...
    'PaperPositionMode','auto');

subplot(2,1,1)
if abs(r) <1
    plot(time,-acos(r)*ones(N,1),'k')
end
if abs(r)==1
    plot(time,(1-r)*pi/2*ones(N,1),'k')
end
hold on
% plot(time,tan(theta/2))
% title('$\tan(\theta/2)$',...
%     'Interpreter','latex')
plot(time,theta)
% title('$\zeta$', ...
title(['r=' num2str(r) ],...
    'Interpreter','latex',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',12,...
    'FontName','Times')
ylabel('$\zeta$',...
    'FontUnits','points',...
    'interpreter','latex',...
    'FontSize',taille_police,...
    'FontName','Times')
xlabel('$\tau$',...
    'interpreter','latex',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',taille_police,...
    'FontName','Times')
set(gca,...
    'Units','normalized',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',taille_police,...
    'FontName','Times')


hold off
ax=axis;
delta_ax = ax(4)-ax(3);
ax(3) = ax(3) - 0.1 * delta_ax;
ax(4) = ax(4) + 0.1 * delta_ax;
ax(1:2)=time([1 end]);
axis(ax);

subplot(2,1,2)
plot(time,(ln_rho))
ax=axis;
ax(1:2)=time([1 end]);
axis(ax);
% title('$\ln(\rho)$',...
%     'Interpreter','latex',...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',12,...
%     'FontName','Times')
ylabel('$\ln \ (\|\nabla \Theta \| )$',...
    'FontUnits','points',...
    'interpreter','latex',...
    'FontSize',taille_police,...
    'FontName','Times')
xlabel('$\tau$',...
    'interpreter','latex',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',taille_police,...
    'FontName','Times')
set(gca,...
    'Units','normalized',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',taille_police,...
    'FontName','Times')
mkdir([pwd '/save_r_alpha'])
eval([ 'print -depsc ' pwd '/save_r_alpha/one_simu_r=' num2str(r) ...
    '_alpha2=' num2str(alpha2) '.eps']);  


