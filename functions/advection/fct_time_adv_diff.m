function time_adv = fct_time_adv_diff(model,w)
% Estimate the advection time when a filament,
% initialy separated from l_cri = sqrt(prod(model.grid.dX)), is folded
% around a vortice (with one tour)

% warning('a has been changed');
% model.a0=model.a0/1e0;

%% Normalized vector perdendicular to the stream
v_ortho = w(:,:,[2 1]);
v_ortho(:,:,1) = - v_ortho(:,:,1);
v_ortho=v_ortho(3:end-2,3:end-2,:);
%         v_ortho(2:end-1,2:end-1,:)=v_ortho(2:end-1,2:end-1,:);
v_ortho=bsxfun(@times,v_ortho,1./sqrt(sum(v_ortho.^2,3)));

%% Space increments between two vorticity rings
% model.l_pixel_nugget=10e3;
% Ld=exp(-model.kriging.param(2));
% l_cri = model.l_pixel_nugget;
l_cri = sqrt(prod(model.grid.dX));

%% Vorticity
vort = 1/(2*model.grid.dX(1)) ...
    *(w(3:end,2:end-1,2)-w(1:end-2,2:end-1,2)) ...
    - 1/(2*model.grid.dX(2)) ...
    *(w(2:end-1,3:end,1)-w(2:end-1,1:end-2,1));% Mx-2 My-2
% vort = 1/(2*model.grid.dX(1)) ...
%     *(w(3:end,2:end-1,2)-w(2:end-1,1:end-2,2)) ...
%     - 1/(2*model.grid.dX(2)) ...
%     *(w(2:end-1,3:end,1)-w(2:end-1,1:end-2,1));% Mx-2 My-2
% vort = 2*vort;

%% Laplacien of the vortcity
lap_vort = 4*del2(vort',model.grid.dX(1),model.grid.dX(2))';

%% Vorticity shear in the direction perpendicular to the stream
% Effect of the main large scale stream
nabla_vort(:,:,1) = 1/(2*model.grid.dX(1)) ...
    *(vort(3:end,2:end-1)-vort(1:end-2,2:end-1)); % Mx-4 My-4 2
%     *(vort(3:end,2:end-1)-vort(2:end-1,1:end-2)); % Mx-4 My-4 2
nabla_vort(:,:,2) = 1/(2*model.grid.dX(2)) ...
    *(vort(2:end-1,3:end)-vort(2:end-1,1:end-2));% Mx-4 My-4 2
beta = l_cri * sum(v_ortho.*nabla_vort,3);

%% Shear of the Laplacian of the vorticty in the direction perpendicular to the stream
% Effect of the diffusion due to the small scale velocity
lap_vort = bsxfun(@times,(model.a0 / 4) , lap_vort);
% lap_vort = bsxfun(@times,(model.advection.coef_diff / 2) , lap_vort);
% lap_vort = (model.advection.coef_diff / 2) * lap_vort;
nabla_lap_vort(:,:,1) = 1/(2*model.grid.dX(1)) ...
    *(lap_vort(3:end,2:end-1)-lap_vort(1:end-2,2:end-1)); % Mx-4 My-4 2
%     *(lap_vort(3:end,2:end-1)-lap_vort(2:end-1,1:end-2)); % Mx-4 My-4 2
nabla_lap_vort(:,:,2) = 1/(2*model.grid.dX(2)) ...
    *(lap_vort(2:end-1,3:end)-lap_vort(2:end-1,1:end-2));% Mx-4 My-4 2
alpha = l_cri * sum(v_ortho.*nabla_lap_vort,3);

%% Number of foldings
n_folding = 1;
gamma = - 2*pi*n_folding*sign(beta);

%% Time of advection local
% if the diffusion term is relevant
time_adv = - beta + sign(beta) .* sqrt( beta.^2 - 4* alpha .* gamma);
time_adv = time_adv ./ (2*alpha);
% if the diffusion term is negligeable
idx = ( alpha(:) == 0);
time_adv(idx)= - gamma(idx) ./ beta(idx);
% if the diffusion term is too big : the folding i not possible
idx = ( 4* alpha(:) .* gamma(:) > beta(:).^2);
time_adv(idx)= inf;


%%
My = size(w,2)/2;
x = model.grid.dX(1)*(0:model.grid.MX(1)-1);
% y = model.grid.dX(2)*(0:model.grid.MX(2)-1);
y = model.grid.dX(2)*(0:model.grid.MX(2)/2-1);

% figure(5)
width=3;
height=4;
% width=2.5;
% height=2;
figure('Name','Tracer','NumberTitle','off','Units','inches', ...
    'Position',[0 0 width height], ...
    'PaperPositionMode','auto');
imagesc(x,y,1./(time_adv(:,1:My)'))
% imagesc(x,y,1./(time_adv'))
% colorbar
 axis equal;
 axis xy ;
 axis([x(1) x(end) y(1) y(end)])
% fct_w_toy(model);
% set(gca,'Clim',[0 8e-5])
% % set(gca,'Clim',[0 5.5e-7])
% imagesc(x,y,-log(time_adv(:,1:My)'))
set(gca,...
    'Units','normalized',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',11,...
    'FontName','Times')
ylabel('y',...
    'FontUnits','points',...
    'interpreter','latex',...
    'FontSize',11,...
    'FontName','Times')
xlabel('x',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',11,...
    'FontName','Times')
%         title('$log(1/T)$',...
title('1/T',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'interpreter','latex',...
    'FontSize',12,...
    'FontName','Times');

% eval( ['print -depsc ' pwd '/plots/t_adv_with_diff_toy.eps']);

%         set(gca,...
%             'Units','normalized',...
%             'FontUnits','points',...
%             'FontWeight','normal',...
%             'FontSize',11,...
%             'FontName','Times')
%         ylabel('y',...
%             'FontUnits','points',...
%             'interpreter','latex',...
%             'FontSize',11,...
%             'FontName','Times')
%         xlabel('x',...
%             'FontUnits','points',...
%             'FontWeight','normal',...
%             'FontSize',11,...
%             'FontName','Times')
%         title('$log(1/T)$',...
%             'FontUnits','points',...
%             'FontWeight','normal',...
%             'interpreter','latex',...
%             'FontSize',12,...
%             'FontName','Times');
%         axis equal;axis xy;
%         axis([x(1) x(end) y(1) y(end)])
%         eval( ['print -depsc ' pwd '/plots/time_adv_diff.eps']);

   %%
        
% % [xgrid,ygrid]=ndgrid(x,y);
% % XP=stk_dataframe ([xgrid(:) ygrid(:)]);
% % zp = stk_predict (model.kriging, model.obs.x,model.obs.h, XP);
% % save(['data_temp_' num2str(model.grid.MX(1)) '_x_' num2str(model.grid.MX(2)/2)],'model','zp','XP');
% 
% load(['data_temp_' num2str(model.grid.MX(1)) '_x_' num2str(model.grid.MX(2)/2)])
% ZZ=reshape(double(zp.mean),[model.grid.MX(1) model.grid.MX(2)/2] );
% hold on;
% clim=get(gca,'Clim');
% contour(x,y,ZZ','k')
% set(gca,'Clim',clim);
% hold off
% % 
% %         set(gca,...
% %             'Units','normalized',...
% %             'FontUnits','points',...
% %             'FontWeight','normal',...
% %             'FontSize',11,...
% %             'FontName','Times')
% %         ylabel('y',...
% %             'FontUnits','points',...
% %             'interpreter','latex',...
% %             'FontSize',11,...
% %             'FontName','Times')
% %         xlabel('x',...
% %             'FontUnits','points',...
% %             'FontWeight','normal',...
% %             'FontSize',11,...
% %             'FontName','Times')
% %         title('$log(1/T)$',...
% %             'FontUnits','points',...
% %             'FontWeight','normal',...
% %             'interpreter','latex',...
% %             'FontSize',12,...
% %             'FontName','Times');
% %         axis equal;axis xy;
% %         axis([x(1) x(end) y(1) y(end)])
% %         eval( ['print -depsc ' pwd '/plots/time_adv_diff.eps']);
%         eval( ['print -depsc ' pwd '/plots/time_adv_diff_klein.eps']);
% 
% keyboard;

%%

time_adv = min(time_adv(:));